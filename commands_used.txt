rpm@Rupams-MacBook-Air ~ % docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
rpm@Rupams-MacBook-Air ~ % 


rpm@Rupams-MacBook-Air ~ % docker run --name hevo_pg \
  -e POSTGRES_USER=postgres \
  -e POSTGRES_PASSWORD=postgres \
  -e POSTGRES_DB=hevo_db \
  -p 5432:5432 \
  -d postgres
Unable to find image 'postgres:latest' locally
latest: Pulling from library/postgres
e363695fcb93: Pull complete 
72b2a95d18ae: Pull complete 
e4a4d59e4813: Pull complete 
83c23b052c11: Pull complete 
8ac2184c9eeb: Pull complete 
629006f53423: Pull complete 
de8c601be6b5: Pull complete 
c9ca5b2589ca: Pull complete 
e35b58d4239f: Pull complete 
80471f789f27: Pull complete 
02edf08630ef: Pull complete 
70d02b11f46d: Pull complete 
7bfc0d48617d: Pull complete 
8f67b02b6b65: Pull complete 
Digest: sha256:073e7c8b84e2197f94c8083634640ab37105effe1bc853ca4d5fbece3219b0e8
Status: Downloaded newer image for postgres:latest
7010fbf2ca36891f74f76da46584485543a90dd217d9d74c3179225d27f90453
rpm@Rupams-MacBook-Air ~ % 

rpm@Rupams-MacBook-Air ~ % docker ps
CONTAINER ID   IMAGE      COMMAND                  CREATED          STATUS          PORTS                    NAMES
7010fbf2ca36   postgres   "docker-entrypoint.s…"   54 seconds ago   Up 53 seconds   0.0.0.0:5432->5432/tcp   hevo_pg


rpm@Rupams-MacBook-Air ~ % 
rpm@Rupams-MacBook-Air ~ % docker exec -it hevo_pg psql -U postgres -d hevo_db
psql (18.0 (Debian 18.0-1.pgdg13+3))
Type "help" for help.

hevo_db=# CREATE TABLE customers (
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    address JSON
);

CREATE TABLE orders (
    id SERIAL PRIMARY KEY,
    customer_id INT REFERENCES customers(id),
    status VARCHAR(50)
);

CREATE TABLE feedback (
    id SERIAL PRIMARY KEY,
    order_id INT REFERENCES orders(id),
    feedback_comment TEXT,
    rating INT
);
CREATE TABLE
CREATE TABLE
CREATE TABLE
hevo_db=# 
hevo_db=# 


hevo_db=# \dt
            List of tables
 Schema |   Name    | Type  |  Owner   
--------+-----------+-------+----------
 public | customers | table | postgres
 public | feedback  | table | postgres
 public | orders    | table | postgres
(3 rows)

hevo_db=# exit   rpm@Rupams-MacBook-Air ~ % /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"  rpm@Rupams-MacBook-Air ~ % echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zprofile
eval "$(/opt/homebrew/bin/brew shellenv)"
rpm@Rupams-MacBook-Air ~ % brew --version
Homebrew 4.6.17
rpm@Rupams-MacBook-Air ~ % 
rpm@Rupams-MacBook-Air ~ % 
rpm@Rupams-MacBook-Air ~ % brew install ngrok/ngrok/ngrok
==> Tapping ngrok/ngrok
Cloning into '/opt/homebrew/Library/Taps/ngrok/homebrew-ngrok'...
remote: Enumerating objects: 329, done.
remote: Counting objects: 100% (83/83), done.
remote: Compressing objects: 100% (54/54), done.
remote: Total 329 (delta 20), reused 51 (delta 17), pack-reused 246 (from 2)
Receiving objects: 100% (329/329), 70.79 KiB | 8.85 MiB/s, done.
Resolving deltas: 100% (73/73), done.
Tapped 1 cask (13 files, 87KB).
==> Downloading https://bin.equinox.io/a/hccQ4GWLNHr/ngrok-v3-3.30.0-darwin-arm64.zip
##################################################################################################################################################################################################### 100.0%
==> Installing Cask ngrok
==> Linking Binary 'ngrok' to '/opt/homebrew/bin/ngrok'
🍺  ngrok was successfully installed!
rpm@Rupams-MacBook-Air ~ %   rpm@Rupams-MacBook-Air ~ % ngrok config add-authtoken 341KzVWprdNOqVvEtlJAKk87Tj9_4LJQhRdUkXUmKPVrXbtCF
Authtoken saved to configuration file: /Users/rpm/Library/Application Support/ngrok/ngrok.yml
rpm@Rupams-MacBook-Air ~ % 

rpm@Rupams-MacBook-Air ~ % ngrok tcp 5432
ERROR:  failed to start tunnel: You must add a credit or debit card before you can use TCP endpoints on a free account. We require a valid card as a way to combat abuse and keep the internet a safe place. This card will NOT be charged.
ERROR:  Add a card to your account here: https://dashboard.ngrok.com/settings#id-verification.
ERROR:  
ERROR:  ERR_NGROK_8013
ERROR:  https://ngrok.com/docs/errors/err_ngrok_8013
ERROR:  
rpm@Rupams-MacBook-Air ~ % ngrok tcp 5432  ngrok                                                                                                                                                                                       (Ctrl+C to quit)
                                                                                                                                                                                                            
🤫 Decouple policy and sensitive data with vaults: https://ngrok.com/r/secrets                                                                                                                              
                                                                                                                                                                                                            
Session Status                online                                                                                                                                                                        
Account                       Sameer Ramteke (Plan: Free)                                                                                                                                                   
Version                       3.30.0                                                                                                                                                                        
Region                        India (in)                                                                                                                                                                    
Latency                       9ms                                                                                                                                                                           
Web Interface                 http://127.0.0.1:4040                                                                                                                                                         
Forwarding                    tcp://0.tcp.in.ngrok.io:10114 -> localhost:5432                                                                                                                               
                                                                                                                                                                                                            
Connections                   ttl     opn     rt1     rt5     p50     p90                                                                                                                                   
                              0       0       0.00    0.00    0.00    0.00                                                                                                                                  
                                                                                 

_____________________________


rpm@Rupams-MacBook-Air ~ % docker exec -it hevo_pg bash
root@7010fbf2ca36:/# echo "host all all 0.0.0.0/0 md5" >> /var/lib/postgresql/data/pg_hba.conf
root@7010fbf2ca36:/# exit
exit
rpm@Rupams-MacBook-Air ~ % docker restart hevo_pg
hevo_pg
rpm@Rupams-MacBook-Air ~ % 




rpm@Rupams-MacBook-Air ~ % docker exec -it hevo_pg bash                              
root@7010fbf2ca36:/# psql -h 0.tcp.in.ngrok.io -p 18600  -U postgres -d hevo_db
psql: error: connection to server at "0.tcp.in.ngrok.io" (13.202.67.218), port 18600 failed: Connection refused
	Is the server running on that host and accepting TCP/IP connections?
root@7010fbf2ca36:/# psql -h 0.tcp.in.ngrok.io -p 10114  -U postgres -d hevo_db
Password for user postgres: 
psql (18.0 (Debian 18.0-1.pgdg13+3))
Type "help" for help.

hevo_db=# 


hevo_db-# echo "wal_level = logical" >> /var/lib/postgresql/data/postgresql.conf
hevo_db-# 
hevo_db-# echo "max_wal_senders = 5" >> /var/lib/postgresql/data/postgresql.conf
echo "max_replication_slots = 5" >> /var/lib/postgresql/data/postgresql.conf
hevo_db-#  \q

root@7010fbf2ca36:/# sed -i "s/^#*wal_level.*/wal_level = logical/" /var/lib/postgresql/18/docker/postgresql.conf
root@7010fbf2ca36:/# echo "max_wal_senders = 5" >> /var/lib/postgresql/18/docker/postgresql.conf
echo "max_replication_slots = 5" >> /var/lib/postgresql/18/docker/postgresql.conf
root@7010fbf2ca36:/# exit
exit
rpm@Rupams-MacBook-Air ~ % 
 rpm@Rupams-MacBook-Air ~ % docker restart hevo_pg                                   
hevo_pg
rpm@Rupams-MacBook-Air ~ % 
  __________________________________________  rpm@Rupams-MacBook-Air ~ % git clone https://github.com/muskan-kesharwani-hevo/hevo-assessment-csv.git
Cloning into 'hevo-assessment-csv'...
remote: Enumerating objects: 12, done.
remote: Counting objects: 100% (12/12), done.
remote: Compressing objects: 100% (11/11), done.
remote: Total 12 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
Receiving objects: 100% (12/12), 21.66 KiB | 10.83 MiB/s, done.   rpm@Rupams-MacBook-Air hevo-assessment-csv % docker cp /Users/rpm/hevo-assessment-csv/hevo-assessment-csv/customers.csv hevo_pg:/customers.csv
Successfully copied 32.3kB to hevo_pg:/customers.csv
rpm@Rupams-MacBook-Air hevo-assessment-csv % docker cp /Users/rpm/hevo-assessment-csv/hevo-assessment-csv/orders.csv hevo_pg:/orders.csv
Successfully copied 5.12kB to hevo_pg:/orders.csv
rpm@Rupams-MacBook-Air hevo-assessment-csv % docker cp /Users/rpm/hevo-assessment-csv/hevo-assessment-csv/feedback.csv hevo_pg:/feedback.csv
Successfully copied 21kB to hevo_pg:/feedback.csv
rpm@Rupams-MacBook-Air hevo-assessment-csv % 

   ________________________________________  rpm@Rupams-MacBook-Air ~ % docker exec -it hevo_pg bash
root@7010fbf2ca36:/# ls
bin  boot  customers.csv  dev  docker-entrypoint-initdb.d  etc	feedback.csv  home  lib  media	mnt  opt  orders.csv  proc  root  run  sbin  srv  sys  tmp  usr  var
root@7010fbf2ca36:/# 
rpm@Rupams-MacBook-Air ~ % docker exec -it hevo_pg psql -U postgres -d hevo_db
psql (18.0 (Debian 18.0-1.pgdg13+3))
Type "help" for help.

hevo_db=# \copy customers(id, first_name, last_name, email, address) FROM '/customers.csv' DELIMITER ',' CSV HEADER;
COPY 200
hevo_db=# \copy orders(id, customer_id, status) FROM '/orders.csv' DELIMITER ',' CSV HEADER;
COPY 200
hevo_db=# \copy feedback(id, order_id, feedback_comment, rating) FROM '/feedback.csv' DELIMITER ',' CSV HEADER;
COPY 200
hevo_db=# 
hevo_db=# 
hevo_db=#                         
SELECT COUNT(*) FROM customers;
SELECT COUNT(*) FROM orders;
SELECT COUNT(*) FROM feedback;
 count 
-------
   200
(1 row)

 count 
-------
   200
(1 row)

 count 
-------
   200
(1 row)

hevo_db=# 



____________________________     





